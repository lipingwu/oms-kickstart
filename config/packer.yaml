# Please edit this file with care, indentation and syntax must be correct
repos:
  # dictionary of git repos to checkout and rsync to salt's file_roots
  states:
    # starting with v0.8.5, core salt states are in oms-salt-core
    oms-salt-core:
      url: git@github.com:IDCubed/oms-salt-core.git
      # use this branch until the current deployment refactor is complete
      rev: master
      # specifies the directory within the repo (where to find states)
      #copy_path: salt/states
    # list multiple repos and they will be rsync'd to the salt files_root
    oms-salt-tcf:
      url: git@github.com:IDCubed/oms-salt-tcf.git
      rev: master


# the initial config seeded into salt-minion
minion_config:
    # where to write the file
    path: /etc/salt/minion
    # the actual config, as YAML
    contents:
      # override the default (salt-minion will use hostname)
      # if deploying to a docker container, this must be set to maintain sanity
      id: oms-dev
      #id: docker
      # if there were a master, look here
      master: 127.0.0.1
      # .sls file root path for salt states/modules/etc
      file_roots:
        base:
          - /etc/salt/states
      # .sls file root path for salt pillar
      pillar_roots:
        base:
          - /etc/salt/pillar
      # setup salt-minion in masterless mode
      file_client: local
      # additional includes to pull in dynamically
      include:
          - minion.d/*


# base states applied after minion is installed
kickstart_state:
  # pkg needed for the initial and generic kickstart process
  base_packages:
    pkg:
      - latest
      - names:
          - git
          - rsync
          - openssh-client
  # we tweak the SSH client config to simplify git checkouts over SSH with salt
  ssh_config:
    file:
      - managed
      - name: /etc/ssh/ssh_config
      - contents: |
          Host *
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null
      - require:
          - pkg: base_packages
  # where to install salt-minion configs/etc to
  install_to:
    file:
      - directory
      - name: /etc/salt
      - makedirs: True
  # salt states will be rsync'd here
  salt_minion_files_roots:
    file:
      - directory
      - name: /etc/salt/states
      - makedirs: True
      - clean: True
      - require:
          - file: install_to
  # embedded pillar and pillar from git will be written here
  salt_minion_pillar_roots:
    file:
      - directory
      - name: /etc/salt/pillar
      - makedirs: True
      - clean: True
      - require:
          - file: install_to


# these are appended to git states created on the fly
requirements:
  - pkg: base_packages
  - file: ssh_config
  - file: salt_minion_files_roots
  - file: salt_minion_pillar_roots

# execute these salt modules.functions after kickstart completes
post_kick:
  - 'state.sls reclass.update_tops'
  - 'state.sls swap'
  - 'cmd.run /root/mkswap.sh'
  - 'state.highstate'
  - 'state.highstate'
  - 'cmd.run oms'

# the keys in the rest of this YAML config are used to seed the
# salt/pillar/bootstral.sls we create for the host during kickstart processing.
# Please edit this file with care, indentation and syntax must be correct
#
# NOTE: you are only required to uncomment the deploy_Defaults and hostname keys,
#       updating the hostname to match the DNS entry used to access the host
#
# begin embedded pillar config
pillar:
  # use the following key to set a specific hostname
  #system_fqdn: host.domain.tld
  # list of packages to install before much else is done
  # these are also defined in reclass, but this list here is used before reclass
  # is even available. keep this.
  base_packages:
    - build-essential
    - tmux
    - vim
    - git
    - htop
    - wget
    - curl
    - python-setuptools
  # reclass helps keep us sane
  reclass:
    localhost:
      # seed reclass' equivalent of salt master tops for this host
      classes:
        - oms-tcc-small-community
      # or, instead of the reference TCC, you can comment out the above, and
      # enable the two below to build the OMS TCF without the TCC, for dev.
      # - fullstack
      # - oms-admin
      # seed reclass' node-specific config keys for salt pillar
      parameters:
        # set this if you would like to override the system's given hostname
        # system_fqdn: oms-dev
        # some initial configuration for OMS' automation tools
        system_fqdn: oms-dev
        oms:
          # set this to override the default revision for OMS git source clone
          default_rev: '${oms:version}'
          # this version is written to /etc/oms.conf
          version: master
          # default values for deploy.conf
          # you _MUST_ at the least, uncomment the next two lines, and update
          # the hostname, this should match the DNS entry for the host
          deploy_defaults:
            hostname: oms-dev
#           oidc_host: '${oms:deploy_defaults:hostname}'
#           vhost_base_url: 'http://${oms:deploy_defaults:hostname}/'
#           oidc_base_url: '${oms:deploy_defaults:vhost_base_url}oidc'
#           ssl_setup: False
#         # git repos to checkout enmasse, clone to oms:src pillar key
#         # the default is to include the entire OMS source code
#         # edit the url/rev to customize where OMS is sourced from
#         repos:
#           oms-salt-hosting:
#             url: git@github.com:IDCubed/oms-salt-hosting.git
#             rev: legacy
#           oms-vrc:
#             url: git@github.com:IDCubed/oms-vrc.git
#             rev: master
#           oms-inside:
#             url: git@github.com:IDCubed/oms-inside.git
#             rev: qa-develop
#           python-oidc:
#             url: git@github.com:IDCubed/python-oidc.git
#             rev: qa-develop
#           salt-common:
#             url: git@github.com:IDCubed/salt-common.git
#             rev: qa-develop
#           salt-non-common:
#             url: git@github.com:IDCubed/salt-non-common.git
#             rev: qa-develop
#           inventory:
#             url: git@github.com:IDCubed/inventory.git
#             rev: qa-develop
#            oms-docs:
#              url: git@github.com:IDCubed/oms-docs.git
#              rev: qa-develop
#            oms-deploy:
#              url: git@github.com:IDCubed/oms-deploy.git
#              rev: qa-develop
#            oms-admin:
#              url: git@github.com:IDCubed/oms-admin.git
#              rev: qa-develop
#            oms-kickstart:
#              url: git@github.com:IDCubed/oms-kickstart.git
#              rev: qa-develop
#            oms-oidc:
#              url: git@github.com:IDCubed/oms-oidc.git
#              rev: qa-develop
#           oms-core:
#              url: git@github.com:IDCubed/oms-core.git
#              rev: qa-develop
#            oms-vrc:
#              url: git@github.com:IDCubed/oms-vrc.git
#              rev: qa-develop
#            oms-ui:
#              url: git@github.com:IDCubed/oms-ui.git
#              rev: qa-develop
#            oms-experimental:
#              url: git@github.com:IDCubed/oms-experimental.git
#              rev: qa-develop
#            oms-salt-core:
#              url: git@github.com:IDCubed/oms-salt-core.git
#              rev: qa-develop
#            oms-salt-tcf:
#              url: git@github.com:IDCubed/oms-salt-tcf.git
#              rev: qa-develop
# end embedded pillar config
